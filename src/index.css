@import "tailwindcss";

.card {
  @apply rounded-2xl w-fit relative overflow-hidden p-[1px];
  isolation: isolate;
  /* Creates a stacking context without affecting other elements */
}

.card::before {
  background: conic-gradient(transparent 70%, black);
  content: '';
  position: absolute;
  inset: -1px;
  z-index: -1;
  animation: border-spin 5s linear infinite;
}

.image_card {
  @apply relative w-fit
}

.image_card::before {
  background: conic-gradient(transparent 70%, green);
  inset: -1px;
  @apply content-[''] absolute bg-green-400 z-[-1] blur-xs rounded-2xl
}

@keyframes border-spin {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

@keyframes infinite_scroll {
  0% {
    transform: translateX(0)
  }

  100% {
    transform: translateX(-100%)
  }
}

.animate-infinite-scroll {
  animation: infinite_scroll 100s linear infinite;
}

.animate_paused {
  animation-play-state: paused
}


.horizontal-mask {
  @apply relative;
}

.horizontal-mask::before,
.horizontal-mask::after {
  @apply content-[''] absolute top-0 bottom-0 w-[120px] z-1
}

.horizontal-mask::before {
  left: 0;
  background: linear-gradient(to right, white, transparent);
}

.horizontal-mask::after {
  right: 0;
  background: linear-gradient(to left, white, transparent);
}




/* loading effect */
.loading_effect {
  @apply relative rounded-full bg-transparent p-2;
  --loading-width: 10%
}

.loading_effect::before {
  @apply absolute content-[""] bg-green-400 z-[-1] rounded-2xl inset-1;
  width: var(--loading-width);
}


@utility flex-center {
  @apply flex justify-center items-center
}

@utility flex-start {
  @apply flex justify-start
}

@utility flex-end {
  @apply flex justify-end
}



@layer utilities {
  .flex_center {
    @apply flex w-full justify-center;
  }

  .flex_between {
    @apply flex w-full justify-between;
  }

  .animate_counter {
    animation: counter-spin 15s linear infinite;
  }

  .animate-spins {
    animation: spin 15s linear infinite;
  }
}


@keyframes spin {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}


@keyframes counter-spin {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(-360deg);
  }
}

.corner-accents {
  position: relative;
}

.corner-accents::after {
  content: "";
  position: absolute;
  inset: -1px;
  pointer-events: none;
  background-repeat: no-repeat;
}

/* two layers per corner */
.corner-accents.top_left::after {
  background:
    linear-gradient(currentColor, currentColor) top left / 20px 2px no-repeat,
    linear-gradient(currentColor, currentColor) top left / 2px 20px no-repeat;
}

.corner-accents.top_right::after {
  background:
    linear-gradient(currentColor, currentColor) top right / 20px 2px no-repeat,
    linear-gradient(currentColor, currentColor) top right / 2px 20px no-repeat;
}

.corner-accents.bottom_left::after {
  background:
    linear-gradient(currentColor, currentColor) bottom left / 20px 2px no-repeat,
    linear-gradient(currentColor, currentColor) bottom left / 2px 20px no-repeat;
}

.corner-accents.bottom_right::after {
  background:
    linear-gradient(currentColor, currentColor) bottom right / 20px 2px no-repeat,
    linear-gradient(currentColor, currentColor) bottom right / 2px 20px no-repeat;
}

.corner-accents.all_corners::after {
  background:
    /* top-left */     linear-gradient(currentColor,currentColor) top left     / 20px 2px no-repeat,
                       linear-gradient(currentColor,currentColor) top left     / 2px 20px no-repeat,
    /* top-right */    linear-gradient(currentColor,currentColor) top right    / 20px 2px no-repeat,
                       linear-gradient(currentColor,currentColor) top right    / 2px 20px no-repeat,
    /* bottom-right */ linear-gradient(currentColor,currentColor) bottom right / 20px 2px no-repeat,
                       linear-gradient(currentColor,currentColor) bottom right / 2px 20px no-repeat,
    /* bottom-left */  linear-gradient(currentColor,currentColor) bottom left  / 20px 2px no-repeat,
                       linear-gradient(currentColor,currentColor) bottom left  / 2px 20px no-repeat;
}


.box{
  animation:rotateBox  6s linear 2s infinite;
  @apply absolute origin-bottom-right bottom-0 right-1/2 rotate-45
}

@keyframes rotateBox {
  from {
    transform: rotate(-140deg);
  }

  to {
    transform: rotate(45deg);
  }
}